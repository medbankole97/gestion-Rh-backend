generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  fullname       String        @db.VarChar(100)
  email          String        @unique @db.VarChar(100)
  password       String        @db.VarChar(100)
  role           UserRole       
  status         Boolean       @default(true)
  timeTrackings  TimeTracking[]
  typeLeaves     TypeLeave[]
  requestLeaves  RequestLeave[]

  @@map("users")
}

enum UserRole {
  ADMIN
  EMPLOYE
  MANAGER
}


model TypeLeave {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(100) @unique  
  userId         Int?           
  user           User?          @relation(fields: [userId], references: [id])
  requestLeaves  RequestLeave[]

  @@map("typeleaves")
}

model TimeTracking {
  id             Int            @id @default(autoincrement())
  checkin_time   DateTime
  checkout_time  DateTime?    
  userId         Int
  user           User           @relation(fields: [userId], references: [id])

  @@map("timetrackings")
}

enum RequestStatus {
  APPROUVE
  REJETE
  EN_ATTENTE
}

model RequestLeave {
  id             Int            @id @default(autoincrement())
  start_date     DateTime
  end_date       DateTime
  motif          String         @db.Text
  status         RequestStatus       
  typeLeaveId    Int
  userId         Int
  typeLeave      TypeLeave      @relation(fields: [typeLeaveId], references: [id])
  user           User           @relation(fields: [userId], references: [id])

  @@map("requestleaves")
}

